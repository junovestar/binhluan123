#!/bin/bash

# Fix Structure Script - S·ª≠a c·∫•u tr√∫c d·ª± √°n v√† l·ªói build
# C√°ch s·ª≠ d·ª•ng: chmod +x fix-structure.sh && ./fix-structure.sh

echo "üîß Fix Structure - Binh Luan Generate By Thanh MKT"
echo "üïê B·∫Øt ƒë·∫ßu: $(date)"
echo ""

# 1. Ki·ªÉm tra c·∫•u tr√∫c d·ª± √°n
echo "=== 1. KI·ªÇM TRA C·∫§U TR√öC D·ª∞ √ÅN ==="
cd ~/sinhton

echo "üìÅ Th∆∞ m·ª•c hi·ªán t·∫°i: $(pwd)"
echo "üìã Files trong th∆∞ m·ª•c:"
ls -la

echo ""
echo "üìÑ N·ªôi dung index.html:"
head -10 index.html

echo ""
echo "üìÅ Th∆∞ m·ª•c src:"
ls -la src/ 2>/dev/null || echo "‚ùå Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c src"

echo ""
echo "üìÅ Th∆∞ m·ª•c backend:"
ls -la backend/ 2>/dev/null || echo "‚ùå Kh√¥ng t√¨m th·∫•y th∆∞ m·ª•c backend"

# 2. Ki·ªÉm tra package.json
echo ""
echo "=== 2. KI·ªÇM TRA PACKAGE.JSON ==="
if [ -f "package.json" ]; then
    echo "‚úÖ T√¨m th·∫•y package.json"
    echo "üìã Scripts trong package.json:"
    grep -A 10 '"scripts"' package.json
else
    echo "‚ùå Kh√¥ng t√¨m th·∫•y package.json"
fi

# 3. T√¨m file main.jsx
echo ""
echo "=== 3. T√åM FILE MAIN.JSX ==="
find . -name "main.jsx" -type f 2>/dev/null || echo "‚ùå Kh√¥ng t√¨m th·∫•y main.jsx"

# 4. T√¨m file server.js
echo ""
echo "=== 4. T√åM FILE SERVER.JS ==="
find . -name "server.js" -type f 2>/dev/null || echo "‚ùå Kh√¥ng t√¨m th·∫•y server.js"

# 5. Ki·ªÉm tra vite.config.js
echo ""
echo "=== 5. KI·ªÇM TRA VITE.CONFIG.JS ==="
if [ -f "vite.config.js" ]; then
    echo "‚úÖ T√¨m th·∫•y vite.config.js"
    echo "üìã N·ªôi dung vite.config.js:"
    cat vite.config.js
else
    echo "‚ùå Kh√¥ng t√¨m th·∫•y vite.config.js"
fi

# 6. Th·ª≠ build l·∫°i
echo ""
echo "=== 6. TH·ª¨ BUILD L·∫†I ==="
echo "üî® Build frontend..."
npm run build

# 7. Ki·ªÉm tra th∆∞ m·ª•c dist
echo ""
echo "=== 7. KI·ªÇM TRA TH∆Ø M·ª§C DIST ==="
if [ -d "dist" ]; then
    echo "‚úÖ Th∆∞ m·ª•c dist t·ªìn t·∫°i"
    echo "üìã Files trong dist:"
    ls -la dist/
else
    echo "‚ùå Th∆∞ m·ª•c dist kh√¥ng t·ªìn t·∫°i"
fi

# 8. T√¨m v√† kh·ªüi ƒë·ªông backend
echo ""
echo "=== 8. T√åM V√Ä KH·ªûI ƒê·ªòNG BACKEND ==="
SERVER_FILE=$(find . -name "server.js" -type f 2>/dev/null | head -1)
if [ -n "$SERVER_FILE" ]; then
    echo "‚úÖ T√¨m th·∫•y server.js: $SERVER_FILE"
    echo "üöÄ Kh·ªüi ƒë·ªông backend..."
    pm2 start "$SERVER_FILE" --name "binh-luan-backend"
    pm2 save
else
    echo "‚ùå Kh√¥ng t√¨m th·∫•y server.js"
fi

# 9. Copy dist n·∫øu c√≥
echo ""
echo "=== 9. COPY DIST ==="
if [ -d "dist" ]; then
    echo "üìã Copy dist v√†o Nginx..."
    sudo mkdir -p /var/www/binh-luan-generate
    sudo cp -r dist /var/www/binh-luan-generate/
    sudo chown -R www-data:www-data /var/www/binh-luan-generate/
    sudo chmod -R 755 /var/www/binh-luan-generate/
    echo "‚úÖ ƒê√£ copy dist"
else
    echo "‚ùå Kh√¥ng c√≥ th∆∞ m·ª•c dist ƒë·ªÉ copy"
fi

# 10. Restart Nginx
echo ""
echo "=== 10. RESTART NGINX ==="
sudo systemctl restart nginx

# 11. Ki·ªÉm tra status
echo ""
echo "=== 11. KI·ªÇM TRA STATUS ==="
sleep 3

echo "üìä PM2 Status:"
pm2 status

echo ""
echo "üîç Test connections:"
# Test backend
curl -s -o /dev/null -w "Backend (localhost:3004): %{http_code}\n" http://localhost:3004/health 2>/dev/null || echo "‚ùå Backend kh√¥ng ph·∫£n h·ªìi"

# Test Nginx local
curl -s -o /dev/null -w "Nginx (localhost): %{http_code}\n" http://localhost 2>/dev/null || echo "‚ùå Nginx local kh√¥ng ph·∫£n h·ªìi"

# Test domain
echo "üåê Testing domain: tomtat.thanhpn.online"
curl -s -o /dev/null -w "Domain: %{http_code}\n" http://tomtat.thanhpn.online 2>/dev/null || echo "‚ùå Domain kh√¥ng ph·∫£n h·ªìi"

echo ""
echo "‚úÖ Fix Structure ho√†n th√†nh! Th·ªùi gian: $(date)"
